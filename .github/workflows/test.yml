name: Build and Test Munich 2

on:
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk

env:
  IMAGE_NAME: jass-duckie-town-webservice

jobs:
  # NEW JOB TO RUN after 'testing'
  push_to_registry:
    needs: []
    name: Push Docker image to GitHub Packages
  
    runs-on: temp
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        
      - name: Run on architecture
        # You may pin to the exact commit or the version.
        # uses: uraimo/run-on-arch-action@14a6e484f2ca4ca85252f01371b1edf0d8c90b41
        uses: uraimo/run-on-arch-action@v2.0.9
        with:
          # CPU architecture: armv6, armv7, aarch64, s390x, ppc64le.
          arch: aarch64
          # Linux distribution name: ubuntu16.04, ubuntu18.04, ubuntu20.04, buster, stretch, jessie, fedora_latest, alpine_latest, archarm_latest.
          distro: ubuntu20.04
          # Your GitHub token, used for caching Docker images in your project's public package registry. Usually this would just be $\{{ github.token }}. This speeds up builds and is highly recommended.
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          # Shell commands to execute in the container.
          run: |
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            [ "$VERSION" == "trunk" ] && docker build . --file Dockerfile --tag jass-duckie-town-webservice --label "runnumber=${GITHUB_RUN_ID}"
        
      #- name: Build image
      #  run: | 
      #    VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      #    [ "$VERSION" == "trunk" ] && docker buildx build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}" --platform $DOCKER_TARGET_PLATFORM --load 
      - name: Log into registry
        # This is where you will update the PATH to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "trunk" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
  # DEPLOY
  deploy_to_raspberry:
    needs: [push_to_registry]
    name: Deploy Docker image to the Raspberry

    runs-on: temp
    steps:
      - name: Deploy with SSH
        uses: fifsky/ssh-action@v0.0.5
        with:
          # Command to execute on the remote server.
          command: |
            cd ~/duckie-town 
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin 
            docker pull ghcr.io/jass-2021/jass-duckie-town-webservice:latest
            docker stop duckie-web
            docker rm duckie-web
            docker run -d --name duckie-web --restart=always -p 8080:8080 ghcr.io/jass-2021/jass-duckie-town-webservice:latest
          # Hostname or IP address of the server.
          host: 131.159.38.52
          # Username for authentication.
          user: ubuntu
          # Port number of the server.
          port: 10010
          # String that contains a private key for either key-based or hostbased user authentication (OpenSSH format)
          key: ${{ secrets.SSH_KEY }}
